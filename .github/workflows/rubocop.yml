# CAUTION: There's probably a way to refactor this nicely. PR welcome.
# NOTE: Reflect changes in .mergify.yml
# NOTE: When changing minimal version of Ruby or Rubocop, change all of them
name: CI

on:
  push:
    branches:
      - master
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  ast_specs:
    name: >-
      ${{ matrix.title || 'Specs' }} | ${{ matrix.ruby }}
    runs-on: ${{ matrix.os }}-latest
    timeout-minutes: 5
    env:
      RUBOCOP_VERSION: none
      JRUBY_OPTS: --dev # http://blog.headius.com/2019/09/jruby-startup-time-exploration.html
      TRUFFLERUBYOPT: --engine.Mode=latency # optimize for short test suites
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu]
        ruby: [2.7, "3.0", 3.1, 3.2, 3.3, 3.4, head]
        modern: [null]
        title: [null]
        include:
          - { ruby: "3.0", os: ubuntu, modern: true, title: 'Specs "modern"' }
          - { ruby: jruby, os: ubuntu }
          - { ruby: jruby-head, os: ubuntu }
          - { ruby: truffleruby, os: ubuntu }
          - { ruby: truffleruby-head, os: ubuntu }

    steps:
      - uses: actions/checkout@v5
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler-cache: true
      - name: set modernize mode
        if: matrix.modern == true
        run: echo 'MODERNIZE=true' >> $GITHUB_ENV
      - name: independence check
        if: matrix.os != 'windows'
        run: (! bundle exec rubocop -h 2> /dev/null) && echo 'RuboCop successfully *not* loaded for local tests'
      - name: spec
        run: bundle exec rake spec

  prism:
    runs-on: ubuntu-latest
    name: Prism
    steps:
      - uses: actions/checkout@v5
      - uses: ruby/setup-ruby@v1
        with:
          # Specify the minimum Ruby version 2.7 required for Prism to run.
          ruby-version: 2.7
          bundler-cache: true
      - name: spec
        env:
          PARSER_ENGINE: parser_prism
        run: bundle exec rake prism_spec

  rubocop_specs:
    name: >-
      Main Gem Specs | RuboCop: ${{ matrix.rubocop }} | ${{ matrix.ruby }} | ${{ matrix.parser_engine }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        # Instead of testing all possibilities, we test the extreme points of
        # a diagonal with the shiniest and latest
        ruby: ["2.7", "3.4"]
        rubocop: [master]
        parser_engine: [parser_whitequark]
        include:
          # as well as very old specs & ancient ruby version
          - { rubocop: "v1.72.1", parser_engine: parser_whitequark, ruby: "2.7" }
          # also test against the prism parser translator
          - { rubocop: "master", parser_engine: parser_prism, ruby: "3.4" }
    env:
      RUBOCOP_VERSION: ${{ matrix.rubocop }}
      PARSER_ENGINE: ${{ matrix.parser_engine }}
    steps:
      - uses: actions/checkout@v5
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
      - name: install rubocop from source for full specs
        run: git clone --branch $RUBOCOP_VERSION https://github.com/rubocop/rubocop.git ../rubocop
      - name: prevent prism from breaking tests on older RuboCop
        # FIXME: Remove when the next prism version is released.
        # See https://github.com/rubocop/rubocop/pull/14526
        if: matrix.rubocop == 'v1.72.1'
        run: cd ../rubocop && sed -i "s/gem 'prism'.*$/gem 'prism', '< 1.5.0'/" Gemfile
      - name: install rubocop dependencies
        run: cd ../rubocop && bundle install --jobs 3 --retry 3
      - name: install dependencies
        run: bundle install --jobs 3 --retry 3
      - name: generate lexer and parser
        run: bundle exec rake generate
      - name: spec
        run: cd ../rubocop && bundle exec rake spec

  internal_investigation:
    name: Coding Style
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ruby # Latest stable CRuby version
          bundler-cache: true
      - name: internal investigation
        run: bundle exec rake generate internal_investigation
